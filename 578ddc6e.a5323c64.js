(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return d})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),o=n(7),r=(n(0),n(89)),i={id:"custom-handle",title:"Custom Handle",slug:"/custom-handle",hide_table_of_contents:!0},d={unversionedId:"custom-handle",id:"custom-handle",isDocsHomePage:!1,title:"Custom Handle",description:"To override the default handle, you will need to pass the prop handleComponent to the BottomSheet component.",source:"@site/docs/custom-handle.md",slug:"/custom-handle",permalink:"/react-native-bottom-sheet/custom-handle",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/custom-handle.md",version:"current",sidebar:"packages",previous:{title:"React Navigation Integration",permalink:"/react-native-bottom-sheet/react-navigation-integration"},next:{title:"Custom Backdrop",permalink:"/react-native-bottom-sheet/custom-backdrop"}},c=[{value:"Example",id:"example",children:[]}],l={rightToc:c};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"To override the default handle, you will need to pass the prop ",Object(r.b)("inlineCode",{parentName:"p"},"handleComponent")," to the ",Object(r.b)("inlineCode",{parentName:"p"},"BottomSheet")," component."),Object(r.b)("p",null,"When you provide your own handle component, it will receive these animated props ",Object(r.b)("inlineCode",{parentName:"p"},"animatedIndex")," & ",Object(r.b)("inlineCode",{parentName:"p"},"animatedPosition")," that indicates the position and the index of the sheet."),Object(r.b)("p",null,"You can extend your custom handle props interface with the provided ",Object(r.b)("inlineCode",{parentName:"p"},"BottomSheetHandleProps")," interface to expose ",Object(r.b)("inlineCode",{parentName:"p"},"animatedIndex")," & ",Object(r.b)("inlineCode",{parentName:"p"},"animatedPosition")," into your own interface."),Object(r.b)("h3",{id:"example"},"Example"),Object(r.b)("p",null,"Here is an example of a custom handle component, but first you will need to install ",Object(r.b)("inlineCode",{parentName:"p"},"Redash"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn add react-native-redash\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/wcandillon/react-native-redash"}),"Redash"),": The React Native Reanimated and Gesture Handler Toolbelt.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import React, { useMemo } from 'react';\nimport { StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport { BottomSheetHandleProps } from '@gorhom/bottom-sheet';\nimport Animated, { interpolate, Extrapolate } from 'react-native-reanimated';\nimport { transformOrigin, toRad } from 'react-native-redash';\n\ninterface HandleProps extends BottomSheetHandleProps {}\n\nconst Handle: React.FC<HandleProps> = ({ animatedIndex }) => {\n  //#region animations\n  const borderTopRadius = useMemo(\n    () =>\n      interpolate(animatedIndex, {\n        inputRange: [1, 2],\n        outputRange: [20, 0],\n        extrapolate: Extrapolate.CLAMP,\n      }),\n    [animatedIndex]\n  );\n  const indicatorTransformOriginY = useMemo(\n    () =>\n      interpolate(animatedIndex, {\n        inputRange: [0, 1, 2],\n        outputRange: [-1, 0, 1],\n        extrapolate: Extrapolate.CLAMP,\n      }),\n    [animatedIndex]\n  );\n  const leftIndicatorRotate = useMemo(\n    () =>\n      interpolate(animatedIndex, {\n        inputRange: [0, 1, 2],\n        outputRange: [toRad(-30), 0, toRad(30)],\n        extrapolate: Extrapolate.CLAMP,\n      }),\n    [animatedIndex]\n  );\n  const rightIndicatorRotate = interpolate(animatedIndex, {\n    inputRange: [0, 1, 2],\n    outputRange: [toRad(30), 0, toRad(-30)],\n    extrapolate: Extrapolate.CLAMP,\n  });\n  //#endregion\n\n  //#region styles\n  const containerStyle = useMemo(\n    () => [\n      styles.header,\n      {\n        borderTopLeftRadius: borderTopRadius,\n        borderTopRightRadius: borderTopRadius,\n      },\n    ],\n    [borderTopRadius]\n  );\n  const leftIndicatorStyle = useMemo(\n    () => ({\n      ...styles.indicator,\n      ...styles.leftIndicator,\n      transform: transformOrigin(\n        { x: 0, y: indicatorTransformOriginY },\n        {\n          rotate: leftIndicatorRotate,\n          translateX: -5,\n        }\n      ),\n    }),\n    [indicatorTransformOriginY, leftIndicatorRotate]\n  );\n  const rightIndicatorStyle = useMemo(\n    () => ({\n      ...styles.indicator,\n      ...styles.rightIndicator,\n      transform: transformOrigin(\n        { x: 0, y: indicatorTransformOriginY },\n        {\n          rotate: rightIndicatorRotate,\n          translateX: 5,\n        }\n      ),\n    }),\n    [indicatorTransformOriginY, rightIndicatorRotate]\n  );\n  //#endregion\n\n  // render\n  return (\n    <Animated.View style={containerStyle}>\n      <Animated.View style={leftIndicatorStyle} />\n      <Animated.View style={rightIndicatorStyle} />\n    </Animated.View>\n  );\n};\n\nexport default Handle;\n\nconst styles = StyleSheet.create({\n  header: {\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    paddingVertical: 14,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: -20,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 10,\n    elevation: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#fff',\n  },\n  indicator: {\n    position: 'absolute',\n    width: 10,\n    height: 4,\n    backgroundColor: '#999',\n  },\n  leftIndicator: {\n    borderTopStartRadius: 2,\n    borderBottomStartRadius: 2,\n  },\n  rightIndicator: {\n    borderTopEndRadius: 2,\n    borderBottomEndRadius: 2,\n  },\n});\n")))}s.isMDXComponent=!0},89:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},p=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,b=p["".concat(i,".").concat(m)]||p[m]||u[m]||r;return n?o.a.createElement(b,d(d({ref:t},l),{},{components:n})):o.a.createElement(b,d({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:a,i[1]=d;for(var l=2;l<r;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);