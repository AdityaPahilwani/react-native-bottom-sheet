"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7033],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=o.createContext({}),l=function(e){var t=o.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,m=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=l(n),d=i,u=h["".concat(m,".").concat(d)]||h[d]||c[d]||a;return n?o.createElement(u,r(r({ref:t},p),{},{components:n})):o.createElement(u,r({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=h;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var l=2;l<a;l++)r[l]=n[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3380:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return m},metadata:function(){return l},toc:function(){return p},default:function(){return h}});var o=n(2122),i=n(9756),a=(n(7294),n(3905)),r=["components"],s={id:"hooks",title:"Hooks",description:"Bottom Sheet hooks.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/hooks"},m=void 0,l={unversionedId:"hooks",id:"hooks",isDocsHomePage:!1,title:"Hooks",description:"Bottom Sheet hooks.",source:"@site/docs/hooks.md",sourceDirName:".",slug:"/hooks",permalink:"/react-native-bottom-sheet/hooks",editUrl:"https://github.com/gorhom/react-native-bottom-sheet/edit/website/docs/hooks.md",tags:[],version:"current",frontMatter:{id:"hooks",title:"Hooks",description:"Bottom Sheet hooks.",keywords:["bottomsheet","bottom-sheet","bottom sheet","react-native","react native","ios","android","sheet","modal","presentation modal","reanimated"],image:"/img/bottom-sheet-preview.gif",slug:"/hooks"},sidebar:"packages",previous:{title:"Methods",permalink:"/react-native-bottom-sheet/methods"},next:{title:"Scrollables",permalink:"/react-native-bottom-sheet/scrollables"}},p=[{value:"<code>useBottomSheet</code>",id:"usebottomsheet",children:[]},{value:"<code>useBottomSheetDynamicSnapPoints</code>",id:"usebottomsheetdynamicsnappoints",children:[]},{value:"<code>useBottomSheetSpringConfigs</code>",id:"usebottomsheetspringconfigs",children:[]},{value:"<code>useBottomSheetTimingConfigs</code>",id:"usebottomsheettimingconfigs",children:[]}],c={toc:p};function h(e){var t=e.components,n=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"usebottomsheet"},(0,a.kt)("inlineCode",{parentName:"h2"},"useBottomSheet")),(0,a.kt)("p",null,"This hook provides all the bottom sheet public ",(0,a.kt)("a",{parentName:"p",href:"methods"},"methods")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"animatedIndex")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"animatedPosition"),", to the internal sheet content or handle."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"This hook works at any component inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"BottomSheet"),"."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { View, Button } from 'react-native';\nimport { useBottomSheet } from '@gorhom/bottom-sheet';\n\nconst SheetContent = () => {\n  const { expand } = useBottomSheet();\n\n  return (\n    <View>\n      <Button onPress={expand}>\n    </View>\n  )\n}\n")),(0,a.kt)("h2",{id:"usebottomsheetdynamicsnappoints"},(0,a.kt)("inlineCode",{parentName:"h2"},"useBottomSheetDynamicSnapPoints")),(0,a.kt)("p",null,"A hook to simplify handling dynamic snap points, it will take an initial snap points with a placeholder for content height ",(0,a.kt)("inlineCode",{parentName:"p"},"CONTENT_HEIGHT")," that will be replaced once the content is measured and will return:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"animatedSnapPoints"),": to provided to BottomSheet or BottomSheetModal."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"animatedHandleHeight"),": an animated handle height callback node."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"animatedContentHeight"),": an animated content height."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"handleContentLayout"),": onLayout callback to be set on BottomSheetView component.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport BottomSheet, {\n  useBottomSheetDynamicSnapPoints,\n} from '@gorhom/bottom-sheet';\n\nconst App = () => {\n  const initialSnapPoints = useMemo(() => ['25%', 'CONTENT_HEIGHT'], []);\n\n  const {\n    animatedHandleHeight,\n    animatedSnapPoints,\n    animatedContentHeight,\n    handleContentLayout,\n  } = useBottomSheetDynamicSnapPoints(initialSnapPoints);\n\n  return (\n    //... other views\n    <BottomSheet\n      ref={bottomSheetRef}\n      snapPoints={animatedSnapPoints}\n      handleHeight={animatedHandleHeight}\n      contentHeight={animatedContentHeight}\n    >\n      <BottomSheetView\n        style={contentContainerStyle}\n        onLayout={handleContentLayout}\n      >\n        //... views to be measured\n      </BottomSheetView>\n    </BottomSheet>\n    //... other views\n  );\n};\n")),(0,a.kt)("h2",{id:"usebottomsheetspringconfigs"},(0,a.kt)("inlineCode",{parentName:"h2"},"useBottomSheetSpringConfigs")),(0,a.kt)("p",null,"Generate animation spring configs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport BottomSheet, { useBottomSheetSpringConfigs } from '@gorhom/bottom-sheet';\n\nconst SheetContent = () => {\n\n  const animationConfigs = useBottomSheetSpringConfigs({\n    damping: 80,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.1,\n    restSpeedThreshold: 0.1,\n    stiffness: 500,\n  });\n\n  return (\n    <BottomSheet\n      // ... other props\n      animationConfigs={animationConfigs}\n    >\n      {CONTENT HERE}\n    </BottomSheet>\n  )\n}\n")),(0,a.kt)("h2",{id:"usebottomsheettimingconfigs"},(0,a.kt)("inlineCode",{parentName:"h2"},"useBottomSheetTimingConfigs")),(0,a.kt)("p",null,"Generate animation timing configs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport BottomSheet, { useBottomSheetTimingConfigs } from '@gorhom/bottom-sheet';\nimport { Easing } from 'react-native-reanimated';\n\nconst SheetContent = () => {\n\n  const animationConfigs = useBottomSheetTimingConfigs({\n    duration: 250,\n    easing: Easing.exp,\n  });\n\n  return (\n    <BottomSheet\n      // ... other props\n      animationConfigs={animationConfigs}\n    >\n      {CONTENT HERE}\n    </BottomSheet>\n  )\n}\n")))}h.isMDXComponent=!0}}]);